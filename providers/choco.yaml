# Chocolatey Provider Data - Windows package manager
version: "1.0"

provider:
  name: "choco"
  display_name: "Chocolatey"
  description: "The package manager for Windows"
  type: "package_manager"
  platforms: ["windows"]
  executable: "choco"  # Main executable for availability detection
  capabilities: ["install", "uninstall", "upgrade", "search", "info", "list", "version", "start", "stop", "restart", "enable", "disable", "status", "logs"]

actions:
  install:
    description: "Install packages via Chocolatey"
    template: "choco install {{sai_package('*', 'name', 'choco')}} -y"
    timeout: 600
    detection: "choco info {{sai_package(0, 'name', 'choco')}} >/dev/null 2>&1"
    validation:
      command: "choco list --local-only | findstr {{sai_package(0, 'name', 'choco')}}"
      expected_exit_code: 0
    rollback: "choco uninstall {{sai_package('*', 'name', 'choco')}} -y"

  uninstall:
    description: "Remove packages via Chocolatey"
    template: "choco uninstall {{sai_package('*', 'name', 'choco')}} -y"
    detection: "choco info {{sai_package(0, 'name', 'choco')}} >/dev/null 2>&1"
    validation:
      command: "choco list --local-only | findstr {{sai_package(0, 'name', 'choco')}} || exit 1"
      expected_exit_code: 1

  upgrade:
    description: "Upgrade packages via Chocolatey"
    template: "choco upgrade {{sai_package('*', 'name', 'choco')}} -y"
    timeout: 600
    detection: "choco info {{sai_package(0, 'name', 'choco')}} >/dev/null 2>&1"

  start:
    description: "Start service via sc command"
    template: "sc start {{sai_service(0, 'service_name', 'choco')}}"
    validation:
      command: "sc query {{sai_service(0, 'service_name', 'choco')}} | findstr RUNNING"
      expected_exit_code: 0

  stop:
    description: "Stop service via sc command"
    template: "sc stop {{sai_service(0, 'service_name', 'choco')}}"
    validation:
      command: "sc query {{sai_service(0, 'service_name', 'choco')}} | findstr STOPPED"
      expected_exit_code: 0

  restart:
    description: "Restart service via sc command"
    steps:
      - name: "stop-service"
        command: "sc stop {{sai_service(0, 'service_name', 'choco')}}"
      - name: "start-service"
        command: "sc start {{sai_service(0, 'service_name', 'choco')}}"

  enable:
    description: "Enable service auto-start"
    template: "sc config {{sai_service(0, 'service_name', 'choco')}} start= auto"

  disable:
    description: "Disable service auto-start"
    template: "sc config {{sai_service(0, 'service_name', 'choco')}} start= disabled"

  status:
    description: "Check service status"
    template: "sc query {{sai_service(0, 'service_name', 'choco')}}"

  logs:
    description: "Show service logs"
    template: "Get-WinEvent -LogName Application | Where-Object {$_.ProviderName -eq '{{sai_package(0, 'name', 'choco')}}'} | Select-Object -First 50"

  info:
    description: "Show package information"
    template: "choco info {{sai_package(0, 'name', 'choco')}}"

  search:
    description: "Search for packages"
    template: "choco search {{sai_package(0, 'name', 'choco')}}"

  list:
    description: "List installed packages"
    template: "choco list --local-only | findstr {{sai_package(0, 'name', 'choco')}}"

  version:
    description: "Show package version"
    template: "choco list --local-only --exact {{sai_package(0, 'name', 'choco')}}"
