version: "0.2"

metadata:
  name: "docker"
  display_name: "Docker"
  description: "Platform for developing, shipping, and running applications in containers"
  version: "24.0.0"
  category: "container"
  subcategory: "runtime"
  tags: ["container", "virtualization", "devops", "deployment"]
  license: "Apache-2.0"
  language: "Go"
  maintainer: "Docker Inc."
  urls:
    website: "https://www.docker.com"
    documentation: "https://docs.docker.com"
    source: "https://github.com/moby/moby"
    issues: "https://github.com/moby/moby/issues"
    support: "https://www.docker.com/support"
    download: "https://download.docker.com"
    changelog: "https://docs.docker.com/engine/release-notes"
    license: "https://github.com/moby/moby/blob/master/LICENSE"
  security:
    security_contact: "security@docker.com"
    vulnerability_disclosure: "https://www.docker.com/security"

packages:
  - name: "engine"
    package_name: "docker-ce"
    version: "24.0.0"
    alternatives: ["docker-ce", "docker.io"]
  - name: "cli"
    package_name: "docker-ce-cli"
    version: "24.0.0"
    alternatives: ["docker-ce-cli"]
  - name: "compose"
    package_name: "docker-compose-plugin"
    version: "2.20.0"
    alternatives: ["docker-compose-plugin"]

services:
  - name: "daemon"
    service_name: "docker"
    type: "systemd"
    enabled: true
    config_files: ["/etc/docker/daemon.json"]

files:
  - name: "config"
    path: "/etc/docker/daemon.json"
    type: "config"
    owner: "root"
    group: "root"
    mode: "0644"
    backup: true
  - name: "socket"
    path: "/var/run/docker.sock"
    type: "socket"
    owner: "root"
    group: "docker"
    mode: "0660"
  - name: "log"
    path: "/var/log/docker.log"
    type: "log"
    owner: "root"
    group: "root"
    mode: "0644"

directories:
  - name: "config"
    path: "/etc/docker"
    owner: "root"
    group: "root"
    mode: "0755"
  - name: "data"
    path: "/var/lib/docker"
    owner: "root"
    group: "root"
    mode: "0711"
  - name: "log"
    path: "/var/log/docker"
    owner: "root"
    group: "root"
    mode: "0755"

commands:
  - name: "docker"
    path: "/usr/bin/docker"
    shell_completion: true
    man_page: "docker(1)"
  - name: "dockerd"
    path: "/usr/bin/dockerd"
    man_page: "dockerd(8)"

ports:
  - port: 2375
    protocol: "tcp"
    service: "docker-api"
    description: "Docker API (insecure)"
  - port: 2376
    protocol: "tcp"
    service: "docker-api-tls"
    description: "Docker API (TLS)"

scripts:
  - name: "convenience"
    url: "https://get.docker.com"
    version: "24.0.0"
    interpreter: "bash"
    checksum: "sha256:b5b2b2c507a0944348e0303114d8d93aaaa081732b86451d9bce1f432a537bc7"
    arguments: ["--channel", "stable", "--dry-run"]
    environment:
      CHANNEL: "stable"
      DOWNLOAD_URL: "https://download.docker.com"
      DRY_RUN: "0"
      SKIP_NON_ROOT_USER: "0"
    working_dir: "/tmp"
    timeout: 600
    custom_commands:
      download: "curl -fsSL https://get.docker.com -o get-docker.sh && echo '{{checksum}}  get-docker.sh' | sha256sum -c"
      install: "chmod +x get-docker.sh && ./get-docker.sh {{arguments | join(' ')}} && systemctl enable docker && systemctl start docker && usermod -aG docker $USER"
      uninstall: "systemctl stop docker && systemctl disable docker && apt-get remove -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin && rm -rf /var/lib/docker /etc/docker && groupdel docker"
      validation: "docker --version && systemctl is-active docker && docker run hello-world"
      version: "docker --version | cut -d' ' -f3 | tr -d ','"
  - name: "compose-standalone"
    url: "https://github.com/docker/compose/releases/download/v{{version}}/docker-compose-{{os}}-{{arch}}"
    version: "2.20.0"
    interpreter: "bash"
    checksum: "sha256:c8a3892c58c33ee2b4b8e7c2c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8"
    arguments: []
    environment:
      COMPOSE_VERSION: "2.20.0"
      INSTALL_PATH: "/usr/local/bin/docker-compose"
    working_dir: "/tmp"
    timeout: 300
    custom_commands:
      download: "curl -L {{url}} -o docker-compose && echo '{{checksum}}  docker-compose' | sha256sum -c"
      install: "chmod +x docker-compose && mv docker-compose {{environment.INSTALL_PATH}} && ln -sf {{environment.INSTALL_PATH}} /usr/bin/docker-compose"
      uninstall: "rm -f {{environment.INSTALL_PATH}} /usr/bin/docker-compose"
      validation: "{{environment.INSTALL_PATH}} --version"
      version: "{{environment.INSTALL_PATH}} --version | cut -d' ' -f4 | tr -d ','"

providers:
  apt:
    repositories:
      - name: "docker-official"
        url: "https://download.docker.com/linux/ubuntu"
        key: "https://download.docker.com/linux/ubuntu/gpg"
        type: "upstream"
        recommended: true
        packages:
          - name: "engine"
            package_name: "docker-ce"
            version: "5:24.0.0-1~ubuntu.22.04~jammy"
            alternatives: ["docker-ce"]
          - name: "cli"
            package_name: "docker-ce-cli"
            version: "5:24.0.0-1~ubuntu.22.04~jammy"
            alternatives: ["docker-ce-cli"]
          - name: "compose"
            package_name: "docker-compose-plugin"
            version: "2.20.0-1~ubuntu.22.04~jammy"
            alternatives: ["docker-compose-plugin"]
      - name: "ubuntu-default"
        type: "os-default"
        packages:
          - name: "engine"
            package_name: "docker.io"
            alternatives: ["docker.io"]
          - name: "compose"
            package_name: "docker-compose"
            alternatives: ["docker-compose"]
        notes: "Older version, not recommended for production"

  dnf:
    repositories:
      - name: "docker-official"
        url: "https://download.docker.com/linux/fedora"
        key: "https://download.docker.com/linux/fedora/gpg"
        type: "upstream"
        recommended: true
        packages:
          - name: "engine"
            package_name: "docker-ce"
            alternatives: ["docker-ce"]
          - name: "cli"
            package_name: "docker-ce-cli"
            alternatives: ["docker-ce-cli"]
          - name: "compose"
            package_name: "docker-compose-plugin"
            alternatives: ["docker-compose-plugin"]

  brew:
    packages:
      - name: "engine"
        package_name: "docker"
        alternatives: ["docker"]
      - name: "compose"
        package_name: "docker-compose"
        alternatives: ["docker-compose"]

  script:
    scripts:
      - name: "convenience"
        url: "https://get.docker.com"
        version: "24.0.0"
        interpreter: "bash"
        checksum: "sha256:b5b2b2c507a0944348e0303114d8d93aaaa081732b86451d9bce1f432a537bc7"
        arguments: ["--channel", "stable"]
        environment:
          CHANNEL: "stable"
          DOWNLOAD_URL: "https://download.docker.com"
          DRY_RUN: "0"
          SKIP_NON_ROOT_USER: "0"
        working_dir: "/tmp"
        timeout: 600
        custom_commands:
          download: "curl -fsSL https://get.docker.com -o get-docker.sh && echo '{{checksum}}  get-docker.sh' | sha256sum -c"
          install: "chmod +x get-docker.sh && ./get-docker.sh {{arguments | join(' ')}} && systemctl enable docker && systemctl start docker && usermod -aG docker $USER"
          uninstall: "systemctl stop docker && systemctl disable docker && apt-get remove -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin && rm -rf /var/lib/docker /etc/docker && groupdel docker"
          validation: "docker --version && systemctl is-active docker"
          version: "docker --version | cut -d' ' -f3 | tr -d ','"
      - name: "compose-standalone"
        url: "https://github.com/docker/compose/releases/download/v{{version}}/docker-compose-{{os}}-{{arch}}"
        version: "2.20.0"
        interpreter: "bash"
        checksum: "sha256:c8a3892c58c33ee2b4b8e7c2c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8"
        arguments: []
        environment:
          COMPOSE_VERSION: "2.20.0"
          INSTALL_PATH: "/usr/local/bin/docker-compose"
        working_dir: "/tmp"
        timeout: 300
        custom_commands:
          download: "curl -L {{url}} -o docker-compose && echo '{{checksum}}  docker-compose' | sha256sum -c"
          install: "chmod +x docker-compose && mv docker-compose {{environment.INSTALL_PATH}} && ln -sf {{environment.INSTALL_PATH}} /usr/bin/docker-compose"
          uninstall: "rm -f {{environment.INSTALL_PATH}} /usr/bin/docker-compose"
          validation: "{{environment.INSTALL_PATH}} --version"
          version: "{{environment.INSTALL_PATH}} --version | cut -d' ' -f4 | tr -d ','"

  docker:
    containers:
      - name: "dind"
        image: "docker"
        tag: "24.0-dind"
        registry: "docker.io"
        ports: ["2376:2376"]
        volumes: ["/var/lib/docker"]
        environment:
          DOCKER_TLS_CERTDIR: "/certs"
        labels:
          purpose: "docker-in-docker"

compatibility:
  matrix:
    - provider: "apt"
      platform: ["ubuntu", "debian"]
      architecture: ["amd64", "arm64"]
      supported: true
      recommended: true
      tested: true
    - provider: "dnf"
      platform: ["fedora", "rhel", "centos"]
      architecture: ["amd64", "arm64"]
      supported: true
      recommended: true
    - provider: "brew"
      platform: "macos"
      architecture: ["amd64", "arm64"]
      supported: true
      recommended: true
    - provider: "script"
      platform: ["linux"]
      architecture: ["amd64", "arm64"]
      supported: true
      recommended: true
      tested: true
      notes: "Official Docker convenience script installation"
    - provider: "docker"
      platform: ["linux", "macos", "windows"]
      architecture: ["amd64", "arm64"]
      supported: true
      notes: "Docker-in-Docker for containerized environments"